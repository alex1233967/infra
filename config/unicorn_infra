#!/bin/bash

### BEGIN INIT INFO
# Provides:          unicorn_overseer
# Required-Start:    $local_fs $remote_fs $network
# Required-Stop:     $local_fs $remote_fs $network
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: starts the unicorn
# Description:       starts the unicorn
### END INIT INFO

PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin

NAME=unicorn
DESC=unicorn
USER=root

PROJECT_PATH=/var/www/infra
PIDFILE=$PROJECT_PATH/tmp/pids/unicorn.pid
DAEMON=unicorn
DAEMON_ARGS="-D -c ./config/unicorn.rb"

if [ "$DAEMON" == "unicorn_rails" ] ; then
	DAEMON_ARGS="$DAEMON_ARGS -E production"
fi

# test that unicorn installed
#su - rvm -c "rvm $RVM_ENV do $DAEMON --version > /dev/null 2>&1" || \
#	{ echo "$DAEMON executable not found for $RVM_ENV"; exit 1; }

get_pid() {
	if test -f $PIDFILE; then
		__pid=`cat $PIDFILE`

		[ -z "$__pid" ] && __pid=0
		kill -0 $__pid > /dev/null 2>&1 || __pid=0

		[ "$__pid" == "0" ] && rm -f $PIDFILE
	else
		__pid=0
	fi

	echo $__pid
}

case "$1" in
	start)
		echo -n "Starting $DESC: "

		if [ "`get_pid`" == "0" ]; then
			su - $USER -c "cd $PROJECT_PATH && $DAEMON $DAEMON_ARGS"
			echo "$NAME."
		else
			echo "Already running"
		fi
		;;

	stop)
		echo -n "Stopping $DESC: "

		if [ "`get_pid`" == "0" ]; then
			echo "Not running"
		else
			su - $USER -c "kill -QUIT `cat $PIDFILE`"
			echo "$NAME."
		fi
		;;

	restart)
		$0 stop
		sleep 3
		$0 start
		;;

	*)
		echo "Usage: $NAME {start|stop|restart}" >&2
		exit 1
		;;
esac

exit 0
